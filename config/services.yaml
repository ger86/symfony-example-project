# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.articles.limit: 5
    app.mailer.default_from: 'no-reply@latteandcode.com'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $appArticlesLimit: '%app.articles.limit%'

    _instanceof:
        App\Service\Formatter\Formatter:
            tags: ['app.formatter']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Model,Form/Model,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Service\Formatter\ApplyFormatters:
        arguments:
            - !tagged_iterator app.formatter

    App\Service\Mailer:
        arguments:
            $defaultEmailFrom: '%app.mailer.default_from%'

    App\Service\MailerInterface: "@App\\Service\\Mailer"
    App\Service\EventDispatcherInterface: "@App\\Service\\EventDispatcher"

    App\EventListener\MailExceptionListener:
        tags:
            - { name: kernel.event_listener }

    App\EventListener\JwtCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\EventListener\JwtDecodedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }
